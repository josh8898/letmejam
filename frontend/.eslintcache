[{"/Users/josh/Documents/letmejam/React attempt/frontend/src/index.js":"1","/Users/josh/Documents/letmejam/React attempt/frontend/src/App.js":"2","/Users/josh/Documents/letmejam/React attempt/frontend/src/reportWebVitals.js":"3","/Users/josh/Documents/letmejam/React attempt/frontend/src/react-file-upload.js":"4"},{"size":500,"mtime":1611025278000,"results":"5","hashOfConfig":"6"},{"size":7747,"mtime":1614043195000,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611025278000,"results":"8","hashOfConfig":"6"},{"size":2215,"mtime":1613970890000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1owkmqn",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"/Users/josh/Documents/letmejam/React attempt/frontend/src/index.js",[],["22","23"],"/Users/josh/Documents/letmejam/React attempt/frontend/src/App.js",["24","25","26"],"import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport ReactAudioPlayer from 'react-audio-player';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './App.css';\nimport SimpleReactFileUpload from './react-file-upload';\n\n\nconst App = () => {\n    return (\n      <Router>\n      <header>\n        <h1>Let Me Jam</h1>\n              <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                <button type=\"button\">\n                  Home\n                </button>\n              </Link>\n              <Link to=\"/add-track\" style={{ textDecoration: 'none' }}>\n                <button type=\"button\">\n                  Add Track\n                </button>\n              </Link>\n      </header>\n      <div>\n        <nav>\n          <ul>\n            \n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/add-track\">\n            <AddTrack />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    );\n}\n\nfunction Home() {\n  useEffect(() => {\n    const getAPI = () => {\n        // Change this endpoint to whatever local or online address you have\n        // Local PostgreSQL Database\n        const API = 'http://letmejam-env.eba-jppjpcwd.ap-southeast-2.elasticbeanstalk.com';\n\n        fetch(API)\n            .then((response) => {\n                console.log(response);\n                return response.json();\n            })\n            .then((data) => {\n                console.log(data);\n                setLoading(false);\n                setApiData(data);\n            });\n    };\n\n   // const getMP3 = (id) => {\n   //   axios({\n   //     url: `http://localhost:5000/files/t${id}.mp3`,\n   //     method: 'GET',\n   //     responseType: 'blob', // important\n   //   }).then((response) => {\n   //     const mp3 = new Blob([response.data], { type: 'audio/mp3' })\n   //     const url = window.URL.createObjectURL(mp3)\n   //     setData(url)\n   //   })\n   //}\n    getAPI();\n    //getMP3(1);\n  }, []);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [Data, setData] = useState(\"\");\n  const handleSearch = (event) => {\n        setData(event.target.value);\n        console.log(Data);\n    }\n\n  return (\n  <Fragment>\n\n    <p>\n      <input\n            type=\"text\"\n            id=\"filter\"\n            placeholder=\"Search for a Track...\"\n            onChange={handleSearch}\n      />\n    </p>\n    <main>\n        {loading === true ? (\n            <div>\n                <h1>Loading...</h1>\n            </div>\n        ) : (\n            <section>\n                {apiData.filter((track) => track[1].includes(Data)).map((track) => {\n                    const trackId = track[0];\n                    const trackName = track[1];\n                    const trackArtist = track[7];\n                    const imgFilename = track[2];\n                    const trackGenre = track[3];\n                    const trackFilename = track[4];\n                    const trackKey = track[5];\n                    const trackRating = track[6];\n                    /*\n                    const playAudio = async (id) => {\n                      try {\n                        console.log(id)\n                        const response = await axios.get(`http://localhost:5000/files/t${id}.mp3`, {responseType:'blob'});\n                        const mp3 = new Blob([response.data], { type: 'audio/mp3' });\n                        const url = (window.URL.createObjectURL(mp3));\n                        console.log(url)\n                        //setData(url);\n                        //return (Data);\n                        //const audio = new Audio(url)\n                        //return url\n                        //audio.load()\n                        //await audio.play()\n                        return url\n                      } catch (e) {\n                        console.log('play audio error: ', e)\n                      }\n                    };\n                    */\n                    //axios.get(`http://localhost:5000/files/t${trackId}.mp3`, {responseType:'blob'}\n                    //).then((response) => {\n                    //  const mp3 = new Blob([response.data], { type: 'audio/mp3' });\n                    //  const url = (window.URL.createObjectURL(mp3));\n                    //});\n\n                    //const trackURL = `http://localhost:5000/files/t${trackId}.mp3`\n                    //console.log(\"here\")\n                    //console.log(trackURL)\n                    //const mp3 = new Blob([response.data], { type: 'audio/mp3' })\n                    //const trackURL = window.URL.createObjectURL(mp3)\n                    /*\n                                                <ul>\n                              <button onClick={() => playAudio(trackId)}>Play Track!</button>\n                            </ul\n                            <ReactAudioPlayer\n                              src={playAudio(trackId)}\n                              controls\n                            />\n                    */\n                    //setData(trackURL)\n                    //<ReactAudioPlayer\n                    //src={trackURL}\n                    //controls\n                  ///>\n                    let metaColor = 'low';\n\n                    return (\n                        <div className=\"track-container\" key={String(trackId)}>\n                            <h1>{trackName}</h1>\n                            <p>\n                                <strong>Artist:</strong> {trackArtist}\n                            </p>\n                            <p>\n                                <strong>Genre:</strong> {trackGenre}\n                            </p>\n                            <p>\n                                <strong>Rating:</strong> <span className={metaColor}>{trackRating}</span>\n                            </p>\n                            <p>\n                                <strong>Key:</strong> {trackKey}\n                            </p>\n                            <ReactAudioPlayer\n                              src={trackFilename}\n                              controls\n                            />\n                            \n                            \n                        </div>\n                    );\n                })}\n            </section>\n        )}\n    </main>\n  </Fragment>);\n}\n\nfunction AddTrack() {\n  /*\n  return (\n    <div className=\"form-container\">\n    <h2>Add Track</h2>\n    <form method=\"POST\" action=\"http://127.0.0.1:5000/add-track\">\n        <div>\n            <label>Track Name</label>\n            <input type=\"text\" name=\"trackName\" required />\n        </div>\n        <div>\n            <label>Track Artist</label>\n            <input type=\"text\" name=\"trackArtist\" required />\n        </div>\n        <div>\n            <label>Image</label>\n            <input type=\"text\" name=\"imgFilename\" />\n        </div>\n        <div>\n            <label>Track Genre</label>\n            <input type=\"text\" name=\"trackGenre\" required />\n        </div>\n        <div>\n            <label>Filename</label>\n            <input type=\"text\" name=\"trackFilename\" required />\n        </div>\n        <div>\n            <label>Track Key</label>\n            <input type=\"text\" name=\"trackKey\" required />\n        </div>\n        <div>\n            <SimpleReactFileUpload/>\n        </div>\n        <div>\n            <button type=\"submit\">Add Track</button>\n        </div>\n    </form>\n</div>\n  );\n  */\n  return (\n    <SimpleReactFileUpload/>\n  );\n}\n\nexport default App;","/Users/josh/Documents/letmejam/React attempt/frontend/src/reportWebVitals.js",[],"/Users/josh/Documents/letmejam/React attempt/frontend/src/react-file-upload.js",["27"],"import React from 'react';\nimport axios, { post } from 'axios';\n\nclass SimpleReactFileUpload extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      file:null\n      //,text:null\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.fileUpload = this.fileUpload.bind(this)\n  }\n  onFormSubmit(e){\n    e.preventDefault() // Stop form submit\n    this.fileUpload(e).then((response)=>{\n      console.log(response.data);\n    })\n  }\n  onChange(e) {\n    this.setState({file:e.target.files[0]})\n  }\n  onTextChange(e) {\n      this.setState({})\n  }\n  fileUpload(event){\n    const url = 'http://127.0.0.1:5000/add-track';\n    const formData = new FormData();\n    const f = event.target.musicfile.files[0];\n    formData.append('file',f);\n    //formData.set(\"data\", text);\n    formData.append('trackName', event.target.trackName.value)\n    formData.append('trackArtist', event.target.trackArtist.value)\n    formData.append('trackGenre', event.target.trackGenre.value)\n    formData.append('trackKey', event.target.trackKey.value)\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return  post(url, formData,config)\n  }\n\n  render() {\n    return (\n    <div className=\"form-container\">\n      <form onSubmit={this.onFormSubmit}>\n        <h2>Add Track</h2>\n        <div>\n            <label>Track Name</label>\n            <input type=\"text\" name=\"trackName\" required />\n        </div>\n        <div>\n            <label>Track Artist</label>\n            <input type=\"text\" name=\"trackArtist\" required />\n        </div>\n        <div>\n            <label>Track Genre</label>\n            <input type=\"text\" name=\"trackGenre\" required />\n        </div>\n        <div>\n            <label>Track Key</label>\n            <input type=\"text\" name=\"trackKey\" required />\n        </div>\n        <div>\n            <label>Track File Upload</label>\n            <input type=\"file\" name = \"musicfile\" onChange={this.onChange} />\n        </div>\n        <div>\n            <button type=\"submit\">Upload Track</button>\n        </div>\n      </form>\n    </div>\n   )\n  }\n}\n\n\n\nexport default SimpleReactFileUpload",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":9,"column":8,"nodeType":"36","messageId":"37","endLine":9,"endColumn":16},{"ruleId":"34","severity":1,"message":"38","line":10,"column":8,"nodeType":"36","messageId":"37","endLine":10,"endColumn":13},{"ruleId":"34","severity":1,"message":"39","line":116,"column":27,"nodeType":"36","messageId":"37","endLine":116,"endColumn":38},{"ruleId":"34","severity":1,"message":"38","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":13},{"ruleId":"30","replacedBy":"40"},{"ruleId":"32","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'imgFilename' is assigned a value but never used.",["42"],["43"],"no-global-assign","no-unsafe-negation"]